(() => {
    "use strict";
    var e;
    e = $(".menu-bar .main-menu ul").html(), $(".menu-bar .menu-bar-content").append('<div class="mobile-menu-overlay">'), $("h2").append('<div class="swiper-pagination-bullet-active">'), $(".menu-bar .mobile-menu-btn").on("click", function() {
        $(this).addClass("active"), $(this).parents(".menu-bar-content").find(".mobile-menu-bar").addClass("active"), $(this).parents(".menu-bar-content").find(".mobile-menu-overlay").addClass("active")
    }), $(".menu-bar .close-mobile-btn, .menu-bar .mobile-menu-overlay").on("click", function() {
        $(this).parents(".menu-bar-content").find(".mobile-menu-bar, .mobile-menu-btn, .mobile-menu-overlay").removeClass("active")
    }), $(".menu-bar .mobile-menu-bar .mobile-menu-header").after(`<nav class="mobile-main-manu"><ul>${e}</ul></nav>`), $(".menu-bar .mobile-main-manu li:has(ul) > a").on("click", function(e) {
        e.preventDefault();
        var e = $(this).parent("li"),
            n = e.siblings("li");
        e.hasClass("active") ? (e.removeClass("active"), e.find("ul").slideUp()) : (e.addClass("active"), n.removeClass("active"), n.children("ul:visible").slideUp(), e.children("ul").slideDown())
    }), $(".menu-bar .mobile-main-manu .has-dropdown").find(".active").parent().slideDown(), $(window).scroll(() => {
        var e, n = $(".menu-bar");
        n.hasClass("v1") ? 0 < $(window).scrollTop() ? n.addClass("sticky-header") : n.removeClass("sticky-header") : (n.hasClass("v2") || n.hasClass("v3")) && (e = $(window).scrollTop(), 576 <= screen.width && 20 < e || screen.width <= 576 && 0 < e ? n.addClass("sticky-header") : n.removeClass("sticky-header"))
    }), document.querySelectorAll("[data-background]").forEach(e => {
        e.style.backgroundImage = `url(${e.getAttribute("data-background")})`
    }), new VenoBox, new Swiper(".testimonial.v1 .slider", {
        slidesPerView: 1,
        spaceBetween: 30,
        loop: !0,
        speed: 1e3,
        autoplay: {
            delay: 3e3,
            disableOnInteraction: !1,
            pauseOnMouseEnter: !0
        },
        navigation: {
            nextEl: ".next-btn",
            prevEl: ".prev-btn"
        },
        pagination: {
            el: ".testimonial.v2 .testimonial-pagination",
            clickable: !0
        },
        breakpoints: {
            300: {
                slidesPerView: 1
            },
            992: {
                slidesPerView: 2
            }
        }
    }), new Swiper(".testimonial.v2 .slider", {
        slidesPerView: 1,
        spaceBetween: 30,
        loop: !0,
        speed: 1e3,
        autoplay: {
            delay: 3e3,
            disableOnInteraction: !1,
            pauseOnMouseEnter: !0
        },
        navigation: {
            nextEl: ".next-btn",
            prevEl: ".prev-btn"
        },
        pagination: {
            el: ".testimonial.v2 .testimonial-pagination",
            clickable: !0
        },
        breakpoints: {
            300: {
                slidesPerView: 1
            },
            992: {
                slidesPerView: 2
            }
        }
    }), new Swiper(".testimonial.v3 .slider", {
        slidesPerView: 1,
        spaceBetween: 30,
        loop: !0,
        speed: 1e3,
        autoplay: {
            delay: 3e3,
            disableOnInteraction: !1,
            pauseOnMouseEnter: !0
        }
    }), $(".accordion-btn").on("click", function() {
        $("li").removeClass("active"), $(this).parents("li").toggleClass("active")
    }), new Swiper(".clind-logo .slider", {
        spaceBetween: 30,
        loop: !0,
        speed: 900,
        autoplay: {
            delay: 500,
            disableOnInteraction: !1,
            pauseOnMouseEnter: !0
        },
        breakpoints: {
            300: {
                slidesPerView: 2
            },
            575: {
                slidesPerView: 3
            },
            767: {
                slidesPerView: 4
            },
            992: {
                slidesPerView: 4
            },
            1200: {
                spaceBetween: "11%",
                slidesPerView: 5
            },
            1400: {
                spaceBetween: "13%",
                slidesPerView: 5
            }
        }
    }), new Swiper(".work-process.v2 .slider", {
        slidesPerView: 1,
        spaceBetween: 30,
        loop: !0,
        speed: 1e3,
        autoplay: {
            delay: 3e3,
            disableOnInteraction: !1,
            pauseOnMouseEnter: !0
        },
        navigation: {
            nextEl: ".work-process.v2 .next-btn",
            prevEl: ".work-process.v2 .prev-btn"
        }
    }), new Swiper(".collaboration.v2 .slider", {
        slidesPerView: 1,
        spaceBetween: 30,
        loop: !0,
        speed: 1e3,
        autoplay: {
            delay: 3e3,
            disableOnInteraction: !1,
            pauseOnMouseEnter: !0
        },
        navigation: {
            nextEl: ".collaboration.v2 .next-btn",
            prevEl: ".collaboration.v2 .prev-btn"
        },
        pagination: {
            el: ".collaboration.v2 .collaboration-pagination",
            clickable: !0
        },
        breakpoints: {
            300: {
                slidesPerView: 1
            },
            768: {
                slidesPerView: 2
            },
            1200: {
                slidesPerView: 3
            }
        }
    });
    {
        const t = $(".counter");

        function n(n) {
            if (!n.dataset.animated) {
                const t = n.textContent;
                anime({
                    targets: n,
                    innerHTML: [parseInt(n.dataset.countMin) || 0, parseInt(n.dataset.countMax)],
                    round: 1,
                    easing: "linear",
                    duration: parseInt(n.dataset.countDuration) || 1e3,
                    delay: parseInt(n.dataset.countDelay) || 500,
                    complete: function(e) {
                        n.textContent = t
                    }
                }), n.dataset.animated = !0
            }
        }
        const a = e => {
            e = e.getBoundingClientRect();
            return 0 <= e.top && 0 <= e.left && e.bottom <= (window.innerHeight || document.documentElement.clientHeight) && e.right <= (window.innerWidth || document.documentElement.clientWidth)
        };
        t.each(function() {
            a(this) && n(this)
        }), $(window).on("scroll", () => {
            t.each(function() {
                a(this) && n(this)
            })
        })
    }
    if ($("form").hasClass("message-form")) {
        const s = document.querySelector(".message-form"),
            i = $(".response");
        s.addEventListener("submit", e => {
            e.preventDefault();
            e = new FormData(s);
            ! function(e, n) {
                var t = e.get("firstname"),
                    a = e.get("lastname"),
                    s = e.get("username"),
                    i = e.get("number"),
                    e = e.get("message");
                if (t && "" !== t.trim())
                    if (a && "" !== a.trim())
                        if (s && "" !== s.trim())
                            if (/^(\d{10}|\d{3}[-\s]\d{3}[-\s]\d{4})$/.test(i)) {
                                if (e && "" !== e.trim()) return n.empty(), 1;
                                r(n, "Please enter a message.", "error")
                            } else r(n, "Please enter a valid number number (e.g., 123-456-7890 or 1234567890).", "error");
                else r(n, "Please enter your user name.", "error");
                else r(n, "Please enter your last name.", "error");
                else r(n, "Please enter your first name.", "error");
                return
            }(e, i) || fetch(s.action, {
                method: "POST",
                body: e
            }).then(e => e.text()).then(e => {
                i.removeClass("error"), i.addClass("success"), i.text(e), s.reset(), r(i)
            }).catch(e => {
                r(i, e), i.removeClass("success"), i.addClass("error"), i.text("" + (e || "Oops! An error occurred and your message could not be sent."))
            })
        })
    }

    function r(e, n, t = "success") {
        anime.timeline().add({
            targets: e[0],
            opacity: [0, 1],
            translateY: [50, 0],
            easing: "easeInOutQuad",
            duration: 400
        }).add({
            targets: e[0],
            opacity: [1, 0],
            translateY: [0, -50],
            easing: "easeInOutQuad",
            duration: 400,
            delay: "error" === t ? 2e3 : 6e3,
            complete: () => {
                e.empty(), e.removeClass(t)
            }
        }), e.removeClass("error" === t ? "success" : "error"), e.addClass(t), e.text(n)
    }
    new WOW({
        animateClass: "animate__animated",
        offset: 0
    }).init();
    {
        let e = $(".scroll-bottom-top"),
            n = $("main").find(".banner,.breadcum").first().outerHeight();
        $(window).scroll(function() {
            $(window).scrollTop() > n / 2 ? e.addClass("show") : e.removeClass("show")
        }), e.on("click", function(e) {
            e.preventDefault(), $("html, body").animate({
                scrollTop: 0
            }, "300")
        })
    }
    // window.addEventListener("load", () => {
    //     const e = document.querySelector(".preloder");
    //     document.querySelector("body .preloder").insertAdjacentHTML("afterbegin", '<div class="loader"></div>'), anime({
    //         targets: e,
    //         opacity: 0,
    //         delay: 500,
    //         duration: 400,
    //         easing: "linear",
    //         complete: function() {
    //             e.remove()
    //         }
    //     })
    // })
})();